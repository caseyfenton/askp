#!/usr/bin/env bash
set -e

# Configuration
ASKP_HOME="${HOME}/.askp"
ASKP_ENV="${ASKP_HOME}/env"
ASKP_CONFIG="${ASKP_HOME}/config"
ASKP_LOGS="${ASKP_HOME}/logs"
VERSION="2.1.0"

# Color output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Logging
log() { echo -e "${2:-$NC}$1${NC}"; }
info() { log "$1" "$GREEN"; }
warn() { log "$1" "$YELLOW"; }
error() { log "$1" "$RED"; }

# Ensure ASKP home directory exists
setup_home() {
    mkdir -p "${ASKP_HOME}" "${ASKP_LOGS}"
    touch "${ASKP_CONFIG}"
}

# Help messages
show_help() {
    cat << EOF
ASKP CLI v${VERSION}

Usage: askp [options] [query]

Commands:
    <query>              Run a search query
    version             Show version information
    help                Show this help message

Options:
    -v, --verbose       Enable verbose output
    -q, --quiet         Suppress all output except results
    -f, --format        Output format (text, json, markdown)
    -o, --output        Save output to file
    -n, --num-results   Number of results to return (default: 5)

Examples:
    askp "How to implement a binary search?"
    askp -f json "What is recursion?"
    askp -n 10 "Python list comprehension"

For more information, visit: https://github.com/yourusername/askp
EOF
    exit 0
}

show_version() {
    echo "ASKP CLI v${VERSION}"
    exit 0
}

# Create/update virtual environment
setup_env() {
    if [ ! -d "${ASKP_ENV}" ]; then
        info "Creating virtual environment..."
        python3 -m venv "${ASKP_ENV}"
    fi
    
    # Activate environment
    source "${ASKP_ENV}/bin/activate"
    
    # Update pip and install/upgrade dependencies
    pip install --quiet --upgrade pip
    
    # Install the askp package if available
    SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    PACKAGE_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"
    if [ -f "$PACKAGE_DIR/setup.py" ]; then
        pip install --quiet --upgrade -e "$PACKAGE_DIR"
    fi
}

# Check for updates
check_update() {
    # TODO: Implement version check against remote
    :
}

# Main command execution
main() {
    case "$1" in
        help|-h|--help)
            show_help
            ;;
        version|-v|--version)
            show_version
            ;;
        *)
            # Setup if needed
            setup_home
            setup_env
            
            # Check for updates weekly
            check_update
            
            # Process query and options
            python -m askp.cli "$@"
            ;;
    esac
}

main "$@"
